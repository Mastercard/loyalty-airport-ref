/*
 * Loyalty Airport Experience API
 * The Loyalty Airport Lounge APIs offers cardholders, via their issuers, the ability to  access the Mastercard Airport Lounge service through this digital channel.  Cardholders can search for airport lounges, get airport lounge details,  access airport lounges via their personalized Digital Membership Card,  and access their lounge history. These APIs can be used to build a rich,  interactive airport experience within the issuer's existing mobile application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: project-ole@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_airport_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_airport_client.model.LoungeAmenity;
import com.mastercard.developer.loyalty_airport_client.model.LoungeImage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LoungeDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-26T11:53:43.013-06:00[America/Chicago]")
public class LoungeDetail {
  public static final String SERIALIZED_NAME_LOUNGE_CODE = "loungeCode";
  @SerializedName(SERIALIZED_NAME_LOUNGE_CODE)
  private String loungeCode;

  public static final String SERIALIZED_NAME_LOUNGE_NAME = "loungeName";
  @SerializedName(SERIALIZED_NAME_LOUNGE_NAME)
  private String loungeName;

  public static final String SERIALIZED_NAME_AIRPORT_NAME = "airportName";
  @SerializedName(SERIALIZED_NAME_AIRPORT_NAME)
  private String airportName;

  public static final String SERIALIZED_NAME_AIRPORT_TERMINAL = "airportTerminal";
  @SerializedName(SERIALIZED_NAME_AIRPORT_TERMINAL)
  private String airportTerminal;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_HOURS = "hours";
  @SerializedName(SERIALIZED_NAME_HOURS)
  private String hours;

  public static final String SERIALIZED_NAME_DIRECTIONS = "directions";
  @SerializedName(SERIALIZED_NAME_DIRECTIONS)
  private String directions;

  public static final String SERIALIZED_NAME_POLICIES = "policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private String policies;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private String terms;

  public static final String SERIALIZED_NAME_IS_GUEST_ALLOWED = "isGuestAllowed";
  @SerializedName(SERIALIZED_NAME_IS_GUEST_ALLOWED)
  private Boolean isGuestAllowed;

  public static final String SERIALIZED_NAME_DMC_ACCEPTED = "dmcAccepted";
  @SerializedName(SERIALIZED_NAME_DMC_ACCEPTED)
  private Boolean dmcAccepted;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_AMENITIES = "amenities";
  @SerializedName(SERIALIZED_NAME_AMENITIES)
  private List<LoungeAmenity> amenities = null;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<LoungeImage> images = null;

  public LoungeDetail loungeCode(String loungeCode) {
    this.loungeCode = loungeCode;
    return this;
  }

   /**
   * Airport lounge unique code
   * @return loungeCode
  **/
  @ApiModelProperty(example = "LGW1", value = "Airport lounge unique code")
  public String getLoungeCode() {
    return loungeCode;
  }

  public void setLoungeCode(String loungeCode) {
    this.loungeCode = loungeCode;
  }

  public LoungeDetail loungeName(String loungeName) {
    this.loungeName = loungeName;
    return this;
  }

   /**
   * Airport lounge name
   * @return loungeName
  **/
  @ApiModelProperty(example = "No1 Lounge, Gatwick", value = "Airport lounge name")
  public String getLoungeName() {
    return loungeName;
  }

  public void setLoungeName(String loungeName) {
    this.loungeName = loungeName;
  }

  public LoungeDetail airportName(String airportName) {
    this.airportName = airportName;
    return this;
  }

   /**
   * Airport name
   * @return airportName
  **/
  @ApiModelProperty(example = "London Gatwick", value = "Airport name")
  public String getAirportName() {
    return airportName;
  }

  public void setAirportName(String airportName) {
    this.airportName = airportName;
  }

  public LoungeDetail airportTerminal(String airportTerminal) {
    this.airportTerminal = airportTerminal;
    return this;
  }

   /**
   * Airport terminal
   * @return airportTerminal
  **/
  @ApiModelProperty(example = "3", value = "Airport terminal")
  public String getAirportTerminal() {
    return airportTerminal;
  }

  public void setAirportTerminal(String airportTerminal) {
    this.airportTerminal = airportTerminal;
  }

  public LoungeDetail city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @ApiModelProperty(example = "London", value = "City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public LoungeDetail country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country
   * @return country
  **/
  @ApiModelProperty(example = "United Kingdom", value = "Country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public LoungeDetail hours(String hours) {
    this.hours = hours;
    return this;
  }

   /**
   * Lounge availability
   * @return hours
  **/
  @ApiModelProperty(example = "04:30 - 22:30 daily", value = "Lounge availability")
  public String getHours() {
    return hours;
  }

  public void setHours(String hours) {
    this.hours = hours;
  }

  public LoungeDetail directions(String directions) {
    this.directions = directions;
    return this;
  }

   /**
   * Directions to the lounge
   * @return directions
  **/
  @ApiModelProperty(example = "Airside - after Security, follow the walkway to the left of orld Duty Free and follow signs 'Airport Lounges' and 'Gates 13-22'. The lounge is located one floor up, and is accessible via lifts or stairs.", value = "Directions to the lounge")
  public String getDirections() {
    return directions;
  }

  public void setDirections(String directions) {
    this.directions = directions;
  }

  public LoungeDetail policies(String policies) {
    this.policies = policies;
    return this;
  }

   /**
   * Lounge policies
   * @return policies
  **/
  @ApiModelProperty(example = "Complimentary Wi-Fi available on request.", value = "Lounge policies")
  public String getPolicies() {
    return policies;
  }

  public void setPolicies(String policies) {
    this.policies = policies;
  }

  public LoungeDetail terms(String terms) {
    this.terms = terms;
    return this;
  }

   /**
   * Lounge usage terms
   * @return terms
  **/
  @ApiModelProperty(example = "Maximum 3 hour stay - Children under 2 years are admitted.", value = "Lounge usage terms")
  public String getTerms() {
    return terms;
  }

  public void setTerms(String terms) {
    this.terms = terms;
  }

  public LoungeDetail isGuestAllowed(Boolean isGuestAllowed) {
    this.isGuestAllowed = isGuestAllowed;
    return this;
  }

   /**
   * Guest allowance indicator
   * @return isGuestAllowed
  **/
  @ApiModelProperty(value = "Guest allowance indicator")
  public Boolean getIsGuestAllowed() {
    return isGuestAllowed;
  }

  public void setIsGuestAllowed(Boolean isGuestAllowed) {
    this.isGuestAllowed = isGuestAllowed;
  }

  public LoungeDetail dmcAccepted(Boolean dmcAccepted) {
    this.dmcAccepted = dmcAccepted;
    return this;
  }

   /**
   * Digital membership card acceptance indicator
   * @return dmcAccepted
  **/
  @ApiModelProperty(value = "Digital membership card acceptance indicator")
  public Boolean getDmcAccepted() {
    return dmcAccepted;
  }

  public void setDmcAccepted(Boolean dmcAccepted) {
    this.dmcAccepted = dmcAccepted;
  }

  public LoungeDetail active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Lounge availability
   * @return active
  **/
  @ApiModelProperty(value = "Lounge availability")
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public LoungeDetail amenities(List<LoungeAmenity> amenities) {
    this.amenities = amenities;
    return this;
  }

  public LoungeDetail addAmenitiesItem(LoungeAmenity amenitiesItem) {
    if (this.amenities == null) {
      this.amenities = new ArrayList<LoungeAmenity>();
    }
    this.amenities.add(amenitiesItem);
    return this;
  }

   /**
   * Array of amenities for this lounge
   * @return amenities
  **/
  @ApiModelProperty(value = "Array of amenities for this lounge")
  public List<LoungeAmenity> getAmenities() {
    return amenities;
  }

  public void setAmenities(List<LoungeAmenity> amenities) {
    this.amenities = amenities;
  }

  public LoungeDetail images(List<LoungeImage> images) {
    this.images = images;
    return this;
  }

  public LoungeDetail addImagesItem(LoungeImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<LoungeImage>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Array of images for this lounge
   * @return images
  **/
  @ApiModelProperty(value = "Array of images for this lounge")
  public List<LoungeImage> getImages() {
    return images;
  }

  public void setImages(List<LoungeImage> images) {
    this.images = images;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoungeDetail loungeDetail = (LoungeDetail) o;
    return Objects.equals(this.loungeCode, loungeDetail.loungeCode) &&
        Objects.equals(this.loungeName, loungeDetail.loungeName) &&
        Objects.equals(this.airportName, loungeDetail.airportName) &&
        Objects.equals(this.airportTerminal, loungeDetail.airportTerminal) &&
        Objects.equals(this.city, loungeDetail.city) &&
        Objects.equals(this.country, loungeDetail.country) &&
        Objects.equals(this.hours, loungeDetail.hours) &&
        Objects.equals(this.directions, loungeDetail.directions) &&
        Objects.equals(this.policies, loungeDetail.policies) &&
        Objects.equals(this.terms, loungeDetail.terms) &&
        Objects.equals(this.isGuestAllowed, loungeDetail.isGuestAllowed) &&
        Objects.equals(this.dmcAccepted, loungeDetail.dmcAccepted) &&
        Objects.equals(this.active, loungeDetail.active) &&
        Objects.equals(this.amenities, loungeDetail.amenities) &&
        Objects.equals(this.images, loungeDetail.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loungeCode, loungeName, airportName, airportTerminal, city, country, hours, directions, policies, terms, isGuestAllowed, dmcAccepted, active, amenities, images);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoungeDetail {\n");
    
    sb.append("    loungeCode: ").append(toIndentedString(loungeCode)).append("\n");
    sb.append("    loungeName: ").append(toIndentedString(loungeName)).append("\n");
    sb.append("    airportName: ").append(toIndentedString(airportName)).append("\n");
    sb.append("    airportTerminal: ").append(toIndentedString(airportTerminal)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    directions: ").append(toIndentedString(directions)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    isGuestAllowed: ").append(toIndentedString(isGuestAllowed)).append("\n");
    sb.append("    dmcAccepted: ").append(toIndentedString(dmcAccepted)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    amenities: ").append(toIndentedString(amenities)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

