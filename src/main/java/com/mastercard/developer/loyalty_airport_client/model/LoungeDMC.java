/*
 *  Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * 
 * Loyalty Airport Experience API
 * The Loyalty Airport Lounge APIs offers cardholders, via their issuers, the ability to  access the Mastercard Airport Lounge service through this digital channel.  Cardholders can search for airport lounges, get airport lounge details,  access airport lounges via their personalized Digital Membership Card,  and access their lounge history. These APIs can be used to build a rich,  interactive airport experience within the issuer's existing mobile application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



package com.mastercard.developer.loyalty_airport_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_airport_client.model.LoungeDMCMedia;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LoungeDMC
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-26T11:53:43.013-06:00[America/Chicago]")
public class LoungeDMC {
  public static final String SERIALIZED_NAME_IS_D_M_C_AVAILABLE = "isDMCAvailable";
  @SerializedName(SERIALIZED_NAME_IS_D_M_C_AVAILABLE)
  private Boolean isDMCAvailable;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LOUNGE_ACCESS_NUMBER = "loungeAccessNumber";
  @SerializedName(SERIALIZED_NAME_LOUNGE_ACCESS_NUMBER)
  private String loungeAccessNumber;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private String expiration;

  public static final String SERIALIZED_NAME_CARD_ON_FILE = "cardOnFile";
  @SerializedName(SERIALIZED_NAME_CARD_ON_FILE)
  private String cardOnFile;

  public static final String SERIALIZED_NAME_DATE_CARD_ADDED = "dateCardAdded";
  @SerializedName(SERIALIZED_NAME_DATE_CARD_ADDED)
  private String dateCardAdded;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private List<LoungeDMCMedia> media = null;

  public LoungeDMC isDMCAvailable(Boolean isDMCAvailable) {
    this.isDMCAvailable = isDMCAvailable;
    return this;
  }

   /**
   * Digital membership card availability indicator
   * @return isDMCAvailable
  **/
  @ApiModelProperty(value = "Digital membership card availability indicator")
  public Boolean getIsDMCAvailable() {
    return isDMCAvailable;
  }

  public void setIsDMCAvailable(Boolean isDMCAvailable) {
    this.isDMCAvailable = isDMCAvailable;
  }

  public LoungeDMC name(String name) {
    this.name = name;
    return this;
  }

   /**
   * User name
   * @return name
  **/
  @ApiModelProperty(example = "John Smith", value = "User name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LoungeDMC loungeAccessNumber(String loungeAccessNumber) {
    this.loungeAccessNumber = loungeAccessNumber;
    return this;
  }

   /**
   * Digital membership card number
   * @return loungeAccessNumber
  **/
  @ApiModelProperty(example = "342528972983", value = "Digital membership card number")
  public String getLoungeAccessNumber() {
    return loungeAccessNumber;
  }

  public void setLoungeAccessNumber(String loungeAccessNumber) {
    this.loungeAccessNumber = loungeAccessNumber;
  }

  public LoungeDMC expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Date on which the digital membership card with expire
   * @return expiration
  **/
  @ApiModelProperty(example = "2019-10-20", value = "Date on which the digital membership card with expire")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public LoungeDMC cardOnFile(String cardOnFile) {
    this.cardOnFile = cardOnFile;
    return this;
  }

   /**
   * User&#39;s payment card linked to digital membership card
   * @return cardOnFile
  **/
  @ApiModelProperty(example = "************0123", value = "User's payment card linked to digital membership card")
  public String getCardOnFile() {
    return cardOnFile;
  }

  public void setCardOnFile(String cardOnFile) {
    this.cardOnFile = cardOnFile;
  }

  public LoungeDMC dateCardAdded(String dateCardAdded) {
    this.dateCardAdded = dateCardAdded;
    return this;
  }

   /**
   * Date on which the digital membership card was created
   * @return dateCardAdded
  **/
  @ApiModelProperty(example = "2017-10-20", value = "Date on which the digital membership card was created")
  public String getDateCardAdded() {
    return dateCardAdded;
  }

  public void setDateCardAdded(String dateCardAdded) {
    this.dateCardAdded = dateCardAdded;
  }

  public LoungeDMC code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Digital membership card information that should be encoded within the QR Code
   * @return code
  **/
  @ApiModelProperty(example = "ABC/DEF/JOHN SMITH/123", value = "Digital membership card information that should be encoded within the QR Code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public LoungeDMC media(List<LoungeDMCMedia> media) {
    this.media = media;
    return this;
  }

  public LoungeDMC addMediaItem(LoungeDMCMedia mediaItem) {
    if (this.media == null) {
      this.media = new ArrayList<LoungeDMCMedia>();
    }
    this.media.add(mediaItem);
    return this;
  }

   /**
   * Array of images for this digital membership card
   * @return media
  **/
  @ApiModelProperty(value = "Array of images for this digital membership card")
  public List<LoungeDMCMedia> getMedia() {
    return media;
  }

  public void setMedia(List<LoungeDMCMedia> media) {
    this.media = media;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoungeDMC loungeDMC = (LoungeDMC) o;
    return Objects.equals(this.isDMCAvailable, loungeDMC.isDMCAvailable) &&
        Objects.equals(this.name, loungeDMC.name) &&
        Objects.equals(this.loungeAccessNumber, loungeDMC.loungeAccessNumber) &&
        Objects.equals(this.expiration, loungeDMC.expiration) &&
        Objects.equals(this.cardOnFile, loungeDMC.cardOnFile) &&
        Objects.equals(this.dateCardAdded, loungeDMC.dateCardAdded) &&
        Objects.equals(this.code, loungeDMC.code) &&
        Objects.equals(this.media, loungeDMC.media);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isDMCAvailable, name, loungeAccessNumber, expiration, cardOnFile, dateCardAdded, code, media);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoungeDMC {\n");
    
    sb.append("    isDMCAvailable: ").append(toIndentedString(isDMCAvailable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    loungeAccessNumber: ").append(toIndentedString(loungeAccessNumber)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    cardOnFile: ").append(toIndentedString(cardOnFile)).append("\n");
    sb.append("    dateCardAdded: ").append(toIndentedString(dateCardAdded)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

